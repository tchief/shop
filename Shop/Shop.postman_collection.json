{
	"info": {
		"name": "Shop",
		"_postman_id": "fe9ea3b1-a25b-8718-2b9a-560dfb33c8e5",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Customers",
			"description": "",
			"item": [
				{
					"name": "Commands",
					"description": "",
					"item": [
						{
							"name": "Create new valid customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ed84fdd4-0880-4f0f-8ac5-474792924920",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Elon Musk\",\n    \"email\": \"elon.musk@mars.com\"\n}"
								},
								"url": {
									"raw": "https://localhost:5001/api/customers/",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"customers",
										""
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Create new customer with missing name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5802fb3f-981e-4210-acc3-cf543a17340d",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Your test name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors.name).to.have.lengthOf(1);",
											"    pm.expect(jsonData.errors.name[0]).to.include(\"The Name field is required.\");",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"elon.musk@mars.com\"\n}"
								},
								"url": {
									"raw": "https://localhost:5001/api/customers/",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"customers",
										""
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Create new customer with short name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e70d13f8-5e71-4864-92bb-a82a2562f8ad",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Your test name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors.name).to.have.lengthOf(1);",
											"    pm.expect(jsonData.errors.name[0]).to.include(\"Name must be a string with a minimum length of 3\");",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"El\",\n    \"email\": \"elon.musk@mars.com\"\n}"
								},
								"url": {
									"raw": "https://localhost:5001/api/customers/",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"customers",
										""
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Create new customer with invalid email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "79137455-ef72-49a2-9633-03a32b9dc3e3",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Your test name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors.email).to.have.lengthOf(1);",
											"    pm.expect(jsonData.errors.email[0]).to.include(\"The Email field is not a valid e-mail address.\");",
											"});",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Elon Musk\",\n    \"email\": \"elon.musk.mars.com\"\n}"
								},
								"url": {
									"raw": "https://localhost:5001/api/customers/",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"customers",
										""
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Create new customer with missing email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9d1d0c4c-721d-490b-ad69-9a7e8d9412f6",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Your test name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors.email).to.have.lengthOf(1);",
											"    pm.expect(jsonData.errors.email[0]).to.include(\"The Email field is required.\");",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Elon Musk\"\n}"
								},
								"url": {
									"raw": "https://localhost:5001/api/customers/",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"customers",
										""
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Queries",
					"description": "",
					"item": [
						{
							"name": "Get all customers",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0b85bfaa-64c4-41f0-b91b-7dc96fa13c60",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Your test name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.length).to.be.above(10);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "https://localhost:5001/api/customers/",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"customers",
										""
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Get customer",
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "https://localhost:5001/api/customers/1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"customers",
										"1"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Get customer by valid name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0e594f27-4c31-4e51-ab0a-a36771ad4764",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Your test name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.length).to.be.above(1);",
											"});",
											"",
											"pm.test(\"Your test name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[0].orders).to.have.lengthOf(0);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "https://localhost:5001/api/customers?name=Co",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"customers"
									],
									"query": [
										{
											"key": "name",
											"value": "Co",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Get customer by valid name with orders",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c95218c3-6588-42fd-a488-bde2fb535b07",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Your test name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.length).to.be.above(1);",
											"});",
											"",
											"pm.test(\"Your test name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[0].orders.length).to.be.above(1);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "https://localhost:5001/api/customers?name=Co&includeOrders=true",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"customers"
									],
									"query": [
										{
											"key": "name",
											"value": "Co",
											"equals": true
										},
										{
											"key": "includeOrders",
											"value": "true",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Get customer by invalid id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "673f7ffc-71d1-474d-a4a0-d345e6e53fa9",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "https://localhost:5001/api/customers/999",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"customers",
										"999"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Get customer with orders",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "02d8d94c-f5de-40c6-a2c0-0cd88e5e5ecb",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Your test name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.orders.length).to.be.above(1);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "https://localhost:5001/api/customers/1?includeOrders=true",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"customers",
										"1"
									],
									"query": [
										{
											"key": "includeOrders",
											"value": "true",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Get all customers with orders",
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "https://localhost:5001/api/customers?includeOrders=true",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"customers"
									],
									"query": [
										{
											"key": "includeOrders",
											"value": "true",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Orders",
			"description": "",
			"item": [
				{
					"name": "Commands",
					"description": "",
					"item": [
						{
							"name": "Create new valid order",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"price\": 7156.12,\n    \"createdDate\": \"2019-02-13T01:24:53.6837968\"\n}"
								},
								"url": {
									"raw": "https://localhost:5001/api/customers/1/orders",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"customers",
										"1",
										"orders"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Create new order with negative price",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b0490eff-94ef-4fce-9a9c-a538e2170841",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Your test name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors.price).to.have.lengthOf(1);",
											"    pm.expect(jsonData.errors.price[0]).to.include(\"We support Price only from\");",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"price\": -7156.12,\n    \"createdDate\": \"2019-02-13T01:24:53.6837968\"\n}"
								},
								"url": {
									"raw": "https://localhost:5001/api/customers/1/orders",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"customers",
										"1",
										"orders"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Create new order with old date",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "56e434d9-45cb-4611-b430-5637d246f358",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Your test name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors.createdDate).to.have.lengthOf(1);",
											"    pm.expect(jsonData.errors.createdDate[0]).to.include(\"support CreatedDate only from\");",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"price\": 7156.12,\n    \"createdDate\": \"1819-02-13T01:24:53.6837968\"\n}"
								},
								"url": {
									"raw": "https://localhost:5001/api/customers/1/orders",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"customers",
										"1",
										"orders"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Create new order with missing price",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "91e968d7-7422-4547-9e28-07319ebfa71c",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Your test name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors.price).to.have.lengthOf(1);",
											"    pm.expect(jsonData.errors.price[0]).to.include(\"support Price only from\");",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"createdDate\": \"2019-02-13T01:24:53.6837968\"\n}"
								},
								"url": {
									"raw": "https://localhost:5001/api/customers/1/orders",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"customers",
										"1",
										"orders"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Create new order with missing date",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"price\": 7156.12,\n}"
								},
								"url": {
									"raw": "https://localhost:5001/api/customers/1/orders",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"customers",
										"1",
										"orders"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Queries",
					"description": "",
					"item": [
						{
							"name": "Get all orders for customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "54ab1a15-ad4e-493c-9bb2-513c17f90d61",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Your test name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.length).to.be.above(1);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "https://localhost:5001/api/customers/1/orders",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"customers",
										"1",
										"orders"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Get all orders for invalid customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7234a582-72df-4bbb-9db1-62673469852a",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "https://localhost:5001/api/customers/999/orders",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"customers",
										"999",
										"orders"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Get order for customer by valid id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "360c7367-bf00-45f4-8b33-cb3426c0fb16",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "https://localhost:5001/api/customers/3/orders/132",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"customers",
										"3",
										"orders",
										"132"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Get order for customer by invalid id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "880b69a1-32f6-43f6-b035-7ca4e00781d3",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "https://localhost:5001/api/customers/3/orders/999",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"customers",
										"3",
										"orders",
										"999"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Get order for customer by invalid customer id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1a121c6f-cfd8-432c-b402-5af230328bde",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "https://localhost:5001/api/customers/999/orders/999",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"customers",
										"999",
										"orders",
										"999"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}